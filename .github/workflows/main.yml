name: Deploy to production server
on:
  push:
    branches:
      - master
    tags:
      - '**-prod**'

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Start Notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.MN_TG_CHAT_ID }}
          token: ${{ secrets.TG_BOT_TOKEN }}
          format: markdown
          message: |
            *‚ôªÔ∏è –î–µ–ø–ª–æ–π –∑–∞–ø—É—â–µ–Ω*
            *üåç –°–µ—Ä–≤–µ—Ä:* –ú–µ—á—Ç–∞
            *üì± –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:* ¬´Logger Old Node¬ª
            *üõ†Ô∏è –¢–∏–ø:* Backend

      - name: Git clone repository
        uses: actions/checkout@v4

      - name: Create BZIP deployment package
        run: tar -cjf logger-old-node.tar.bz2 ./*

      - name: Copy file to serve
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          source: logger-old-node.tar.bz2
          target: ~/uploads/

      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            if [ -d "/var/www/${{ secrets.BACKEND_FOLDER }}" ]; then
              cd /var/www/${{ secrets.BACKEND_FOLDER }}

              # –£–¥–∞–ª—è–µ—Ç –≤—Å–µ –∫—Ä–æ–º–µ –ø–∞–ø–∫–∏ node_modules
              ls | grep -v "node_modules" | xargs rm -rfv

              # –†–∞—Å–ø–∞–∫–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞
              tar -C ./ -xjf ~/uploads/logger-old-node.tar.bz2
              rm -rf ~/uploads/logger-old-node.tar.bz2

              # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏ Node.js
              . ~/.nvm/nvm.sh
              nvm install lts/fermium
              nvm use lts/fermium

              # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
              npm install

              # –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–ø–∫–∏ –¥–ª—è –ª–æ–≥–æ–≤ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
              mkdir -p logs

              # –ò–º—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –∏–∑ ecosystem.config.js
              APP_NAME="logger-old-node-backend"

              # –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä–æ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞
              if pm2 list | grep -q $APP_NAME; then
                pm2 stop $APP_NAME
                pm2 delete $APP_NAME
              else
                echo "Process $APP_NAME not found, skipping..."
              fi

              # –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞
              pm2 start ecosystem.config.js --env production
              pm2 save
            echo "Error: Directory /var/www/${{ secrets.BACKEND_FOLDER }} does not exist!"
              exit 1
            fi
      - name: Success Notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.MN_TG_CHAT_ID }}
          token: ${{ secrets.TG_BOT_TOKEN }}
          format: markdown
          message: |
            *‚úÖ –î–µ–ø–ª–æ–π —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω*
            *üåç –°–µ—Ä–≤–µ—Ä:* –ú–µ—á—Ç–∞
            *üì± –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:* ¬´Logger Old Node¬ª
            *üõ†Ô∏è –¢–∏–ø:* Backend
            *–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞:* _${{ github.event.commits[0].message }}_

      - name: Failed Notification
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.MN_TG_CHAT_ID }}
          token: ${{ secrets.TG_BOT_TOKEN }}
          format: markdown
          message: |
            *‚ùå –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω –Ω–µ—É–¥–∞—á–µ–π*
            *üåç –°–µ—Ä–≤–µ—Ä:* –ú–µ—á—Ç–∞
            *üì± –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:* ¬´Logger Old Node¬ª
            *üõ†Ô∏è –¢–∏–ø:* Backend
            *–ù–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞:* _${{ github.event.commits[0].message }}_